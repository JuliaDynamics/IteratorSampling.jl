var documenterSearchIndex = {"docs":
[{"location":"#API","page":"API","title":"API","text":"","category":"section"},{"location":"#General-functionalities","page":"API","title":"General functionalities","text":"","category":"section"},{"location":"","page":"API","title":"API","text":"itsample","category":"page"},{"location":"#StreamSampling.itsample","page":"API","title":"StreamSampling.itsample","text":"itsample([rng], iter, method = algL)\nitsample([rng], iter, wv, method = algAExpJ)\n\nReturn a random element of the iterator, optionally specifying a rng  (which defaults to Random.default_rng()) and a wv function. If the iterator is empty, it returns nothing.\n\n\n\nitsample([rng], iter, method = algL; ordered = false)\nitsample([rng], iter, wv, method = algAExpJ; ordered = false)\n\nReturn a vector of n random elements of the iterator,  optionally specifying a rng (which defaults to Random.default_rng()) and a method. ordered dictates whether an ordered sample (also called a sequential  sample, i.e. a sample where items appear in the same order as in iter) must be  collected.\n\nIf the iterator has less than n elements, in the case of sampling without replacement, it returns a vector of those elements.\n\n\n\n\n\n","category":"function"},{"location":"#Implemented-ALgorithms","page":"API","title":"Implemented ALgorithms","text":"","category":"section"},{"location":"","page":"API","title":"API","text":"StreamSampling.algL\nStreamSampling.algR\nStreamSampling.algRSWRSKIP\nStreamSampling.algAExpJ\nStreamSampling.algARes\nStreamSampling.algWRSWRSKIP","category":"page"},{"location":"#StreamSampling.algL","page":"API","title":"StreamSampling.algL","text":"Adapted from algorithm L described in \"Random sampling with a reservoir, J. S. Vitter, 1985\".\n\n\n\n\n\n","category":"constant"},{"location":"#StreamSampling.algR","page":"API","title":"StreamSampling.algR","text":"Adapted from algorithm R described in \"Random sampling with a reservoir, J. S. Vitter, 1985\".\n\n\n\n\n\n","category":"constant"},{"location":"#StreamSampling.algRSWRSKIP","page":"API","title":"StreamSampling.algRSWRSKIP","text":"Adapted fron algorithm RSWR_SKIP described in \"Reservoir-based Random Sampling with Replacement from  Data Stream, B. Park et al., 2008\".\n\n\n\n\n\n","category":"constant"},{"location":"#StreamSampling.algAExpJ","page":"API","title":"StreamSampling.algAExpJ","text":"Adapted from algorithm A-ExpJ described in \"Weighted random sampling with a reservoir,  P. S. Efraimidis et al., 2006\".\n\n\n\n\n\n","category":"constant"},{"location":"#StreamSampling.algARes","page":"API","title":"StreamSampling.algARes","text":"Adapted from algorithm A-Res described in \"Weighted random sampling with a reservoir,  P. S. Efraimidis et al., 2006\".\n\n\n\n\n\n","category":"constant"},{"location":"#StreamSampling.algWRSWRSKIP","page":"API","title":"StreamSampling.algWRSWRSKIP","text":"Adapted from algorithm WRSWR_SKIP described in \"A Skip-based Algorithm for Weighted Reservoir  Sampling with Replacement, A. Meligrana, 2024\". \n\n\n\n\n\n","category":"constant"}]
}
